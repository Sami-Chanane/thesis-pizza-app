name: PIPELINE
on:
  workflow_dispatch:
  push:
    branches:
    - master
env:
  REGISTERY: "https://ghcr.io"
  IMAGE_NAME: "${{ github.actor }}/pizza-website"
  IMAGE_TAG: ${{ github.run_number }}
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Get Code from Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Lint Code
      continue-on-error: true      # continue pipeline execution even if issues were found
      uses: super-linter/super-linter@v5.7.2
      env:
        DEFAULT_BRANCH: main
        VALIDATE_ALL_CODEBASE: false  # to lint only the new code
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # To report GitHub Actions status checks
    - name: Trivy Security Scan for the Repo
      continue-on-error: true      # continue pipeline execution even if issues were found
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'sarif'
        output: 'trivy-results-${{ env.IMAGE_TAG }}-repo.sarif'
        severity: 'HIGH,CRITICAL'
    - name: Upload Trivy Scan Results to GitHub Security Tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results-${{ env.IMAGE_TAG }}-repo.sarif'
    - name: Test Application
      uses: docker/build-push-action@v5
      with:
        push: false
        target: test-report
        outputs: type=local,dest=$(pwd)
        tags: ${{ env.REGISTERY }}/${{ env.IMAGE_NAME }}:test   # tag does not matter because the image will be deleted when job in completed
    - name: Upload Test Reports
      uses: actions/artifact-upload@v3
      with:
        name: test-report-${{ env.IMAGE_TAG }}
        path: |
          coverage.out
          report.txt
    - name: Login to GitHub Container Registery
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTERY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU     # necessary for multi-arch builds
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx      # necessary for multi-arch builds
      uses: docker/setup-buildx-action@v3
    - name: Build Application Image
      run: docker buildx build --target final-stage --platform linux/amd64,linux/arm64,linux/arm/v7 --tag ${{ env.REGISTERY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
    - name: Trivy Security Scan for the Image
      continue-on-error: true      # continue pipeline execution even if issues were found
      uses: aquasecurity/trivy-action@master
      with: 
        image-ref: ${{ env.REGISTERY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        ignore-unfixed: true
        format: 'sarif'
        output: 'trivy-results-${{ env.IMAGE_TAG }}-image.sarif'
        severity: 'HIGH,CRITICAL'
    - name: Upload Trivy Scan Results to GitHub Security Tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results-${{ env.IMAGE_TAG }}-image.sarif'
    - name: Push Image to ${{ env.REGISTERY }}
      run: docker push ${{ env.REGISTERY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
    # - name: Build Application Image and Push it to GHCR
    #   uses: docker/build-push-action@v5
    #   with:
    #     push: true
    #     target: final-stage
    #     platforms: linux/amd64,linux/arm64,linux/arm/v7
    #     tags: ${{ env.REGISTERY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}




